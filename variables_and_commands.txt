Note: if this page looks funny, disable word wrapping


new/improved server variables...

g_friendlyFire (default=1)				<--	Set this to 0 to disable friendly fire (you can't kill teammates)
								Set this to 1 to enable friendly fire
								Set this to 2 to enable friendly fire and make the killer freeze instead of the victim (the killer will only be frozen after repeated team kills) (if g_friendlyfire > 1 then you must also have g_gameMod set to 1)
								Set this to 3 to enable friendly fire and make the victim temporarily frozen (the victim will only be frozen after repeated team kills) (if g_friendlyfire > 1 then you must also have g_gameMod set to 1)
g_friendlyFire_accidents (default=0)			<--	The number of accidental team kills you can do before the appropriate punishment kicks in (only applicable in g_friendlyFire > 1 and g_gameMod == 1).  Setting this to 0 means a team kill is punished instantly and no leeway is given to the player for accidental kills.  Set this to greater than 0 to create a 'buffer' to allow people to perform a number of accidental team kills before they are punished.
g_inactivity_warnDisplayTime (default=1)		<--	Time, in milliseconds, an inactive player will see the warning message about how they are about to be kicked
g_spectatorInactivity (default=0)			<--	Time in seconds a spectator can be inactive before being kicked
g_spectatorInactivity_warnDisplayTime (default=1)	<--	Time, in milliseconds, an inactive spectator will see the warning message about how they are about to be kicked
g_weaponTeamRespawn (default=30)			<--	The time in seconds weapons will respawn in a team game (this is the team version of g_weaponrespawn)
g_smoothClients (default=0)				<--	Turns on the server-sided client smoothing
								0 = Off (default)
								1 = Attempt the original server-side client smoothing (useful for correcting skipping players).  May also be useful to tweak sv_fps to improve smoothness.
								2 = Attempt the improved version of server-side client smoothing (also useful for correcting skipping players).  May also be useful to tweak sv_fps to improve smoothness.
g_delag (default=0)					<--	Boolean to enable delag functionality
g_rocketEffects (default=0)				<--	Turns on the rocket's special abilities:
								0 = Off (default)
								1 = Homing rockets (they will auto-seek the targets)
								2 = Guided rockets (you point where you want them to go)
g_rocketEffects_targetCone (default=0.90)		<--	Size of the targeting cone ahead of the rocket.  The closer this value is to 1, the narrower the cone (will only target players directly in front of the rocket).  The closer this value is to 0, the wider the cone (will target the first player it considers to be a target).
g_rocketEffects_turnRadius (default=1.25)		<--	The turning radius of a rocket.  Make this value small to make the rocket turn quickly (and hard to dodge).  Make it large to make the rocket turn slowly (easy to dodge).
g_rocketEffects_targetDist (default=768)		<--	Maximum distance ahead of the rocket a player can be to be considered as a target
g_rocketEffects_keepTarget (default=0)			<--	For use with g_rocketEffects == 1.  This will cause rockets homing in a person to never lose track of the person; this will make the rockets much deadlier and difficult to dodge.
g_rocketEffects_targetTurret (default=0)		<--	Boolean to enable homing rockets to target and home in on turrets.  (See g_turret and g_turret_amount to turn on turrets)
g_rocketEffects_targetRocket (default=0)		<--	Boolean to enable homing rockets to target and home in on other homing rockets.  (See g_rocketeffects to turn on homing rockets)
g_rocketEffects_deadOwnerProtection (default=0)		<--	Boolean to cause homing/guided rockets to discontinue homing/guiding if the owner is dead.
g_vulnerableRockets (default=0)				<--	Boolean to make rockets vulnerable to being shot down.
g_vulnerableRockets_health (default=5)			<--	The health of a vulnerable rocket.
g_bannedMessage	(default="Banned")			<--	Message to show to clients who have been banned indefinitely.
g_bannedMessage_finite (default="Temporarily Banned")	<--	Message to show to clients who have been banned temporarily.
g_speed_rocket (default=900)				<--	The speed of the rocket projectile.
g_speed_plasma (default=2000)				<--	The speed of the plasma projectile.
g_speed_bfg (default=2000)				<--	The speed of the bfg projectile.
g_speed_grenade (default=700)				<--	The speed of a grenade.
g_speed_grapple (default=800)				<--	The speed of the grappling hook when you shoot it out.
g_speed_grapple_pull (default=800)			<--	The speed of the grappling hook when you are being pulled.
g_speed_nail (default=555)				<--	The speed of the nailgun projectile.
g_speed_prox (default=700)				<--	The speed of the proximity grenade projectile.
g_victoryPad (default=0)				<--	Boolean to show the victory pad during the intermission.  This will also attempt to play the nightmare sound during the intermission.
g_reload_rocket (default=400)				<--	The reload time of the rocket launcher in milliseconds
g_reload_plasma (default=100)				<--	The reload time of the plasma gun in milliseconds
g_reload_bfg (default=200)				<--	The reload time of the bfg in milliseconds
g_reload_grapple (default=400)				<--	The reload time of the grappling hook in milliseconds
g_reload_grenade (default=800)				<--	The reload time of the grenade launcher in milliseconds
g_reload_machinegun (default=100)			<--	The reload time of the machinegun in milliseconds
g_reload_shotgun (default=1000)				<--	The reload time of the shotgun in milliseconds
g_reload_lightning (default=50)				<--	The reload time of the lightning gun in milliseconds
g_reload_gauntlet (default=400)				<--	The reload time of the gauntlet in milliseconds
g_reload_railgun (default=1500)				<--	The reload time of the railgun in milliseconds
g_reload_nail (default=1000)				<--	The reload time of the nailgun in milliseconds
g_reload_chaingun (default=30)				<--	The reload time of the chaingun in milliseconds
g_reload_prox (default=800)				<--	The reload time of the proximity grenade launcher in milliseconds
g_ammo_rocket (default=15)				<--	The amount of rocket launcher ammo you start with
g_ammo_plasma (default=50)				<--	The amount of plasma gun ammo you start with
g_ammo_bfg (default=20)					<--	The amount of BFG ammo you start with
g_ammo_grenade (default=10)				<--	The number of grenades you start with
g_ammo_machinegun (default=100)				<--	The amount of machinegun ammo you start with
g_ammo_machinegun_team (default=50)			<--	The amount of machinegun ammo you start within team games
g_ammo_shotgun (default=10)				<--	The amount of shotgun ammo you start with
g_ammo_lightning (default=100)				<--	The amount of lightning gun ammo you start with
g_ammo_railgun (default=10)				<--	The amount of railgun ammo you start with
g_ammo_nail (default=20)				<--	The amount of nailgun ammo you start with
g_ammo_prox (default=10)				<--	The amount of proximity grenades you start with
g_ammo_chaingun (default=100)				<--	The amount of chaingun ammo you start with
g_ammo_pickupMaximum (default=200)			<--	The maximum amount of ammo you can carry.  If you have this much ammo you will be unable to pick up any more.
g_startBanner (default=0)				<--	Amount of time, in milliseconds, to show a text banner when a person joins the game.  Setting this to 0 will cause the text banners to not be shown.  Setting this less than 3000 will cause the text banner to be shown for the default time of 3 seconds (3000 milliseconds).
g_startBanner_text1 (default="")			<--	The first line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text2 (default="")			<--	The second line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text3 (default="")			<--	The third line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text4 (default="")			<--	The fourth line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text5 (default="")			<--	The fifth line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text6 (default="")			<--	The sixth line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text7 (default="")			<--	The seventh line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text8 (default="")			<--	The eighth line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text9 (default="")			<--	The ninth line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_startBanner_text10 (default="")			<--	The last line of text for the start banner.  banners can be colored using ^'s.  you can leave this variable blank if you don't want to use this line of text.
g_noTourneyChat (default=0)				<--	Boolean to disable public chatting during tournaments.  When set to 1, tournament players will not be able to hear spectators speaking.
g_headshots (default=0)					<--	Boolean to turn on headshot detection
g_headshots_multiplier (default=1.8)			<--	The value normal damage is multiplied by when you perform a headshot.
g_chatLimiter (default=2000)				<--	The value to limit how often someone can chat.  Set it to a value, in milliseconds, people must wait between their chats.  Set it to 0 to turn off chat limiting.
g_damage_railgun (default=100)				<--	The amount of damage the railgun delivers	
g_damage_lightning (default=8)				<--	The amount of damage the lightning gun delivers
g_damage_gauntlet (default=50)				<--	The amount of damage the gauntlet delivers
g_damage_machinegun (default=7)				<--	The amount of damage the machinegun delivers
g_damage_machinegun_team (default=5)			<--	The amount of damage the machinegun delivers during a team game
g_damage_shotgun (default=10)				<--	The amount of damage the shotgun delivers
g_damage_bfg (default=100)				<--	The amount of damage the bfg delivers
g_damage_rocket (default=100)				<--	The amount of damage the rocket launcher delivers
g_damage_plasma (default=20)				<--	The amount of damage the plasma gun delivers
g_damage_grenade (default=100)				<--	The amount of damage a grenade delivers
g_damage_grapple (default=20)				<--	The amount of damage the grappling hook delivers
g_damage_nail (default=20)				<--	The amount of damage the nailgun will do when you get hit with a nail
g_damage_prox (default=0)				<--	The amount of damage the prox launcher will do when you get hit with a proximity grenade
g_splashDamage_railgun (default=100)			<--	The amount of splash damage the railgun delivers.  Only active when g_railgunSplash == 1.  If used with railgun jumping, see g_splashRadius_railgun, g_selfDamage, g_knockback_self, and g_railgunSplash (and sub commands).
g_splashDamage_bfg (default=100)			<--	The amount of splash damage the bfg delivers
g_splashDamage_rocket (default=100)			<--	The amount of splash damage the rocket launcher delivers
g_splashDamage_plasma (default=15)			<--	The amount of splash damage the plasma gun delivers
g_splashDamage_grenade (default=100)			<--	The amount of splash damage a grenade delivers
g_splashDamage_prox (default=100)			<--	The amount of splash damage a exploding proximity grenade delivers
g_splashRadius_railgun (default=120)			<--	The size of the splash radius for the railgun.  Only active when g_railgunSplash == 1.  If used with railgun jumping, see g_splashDamage_railgun, g_selfDamage, g_knockback_self, and g_railgunSplash (and sub commands).
g_splashRadius_bfg (default=120)			<--	The size of the splash radius for the bfg
g_splashRadius_rocket (default=120)			<--	The size of the splash radius for a rocket
g_splashRadius_plasma (default=20)			<--	The size of the splash radius for the plasma gun
g_splashRadius_grenade (default=150)			<--	The size of the splash radius for a grenade
g_splashRadius_prox (default=150)			<--	The size of the splash radius for an exploding proximity grenade
g_spawnProtection (default=0)				<--	Boolean to enable protected spawning at initial spawning only.  Turning this option on is not necessary if you only want people to be protected after a timeout; in this case, set this variable to 0 and turn g_spawnProtection_timeout on.
g_spawnProtection_type (default=1)			<--	Will cause all spawning players to spawn with either invisibility or the battle suit.  This only takes affect on the initial spawn, not if you are teleported or during a lastmanstanding or freezetag score or muckleball match restart.  See g_spawnProtection_otherPlayers for more information.  Set to 0 to turn off protected spawning.
								1 = Players spawn invisible with no spawning sounds
								2 = Players spawn with the battlesuit powerup.  Beware when using this when g_freezetag_frozenTeamColors is set to a non-zero value, since spawning people will look like frozen bodies.
g_spawnProtection_time (default=2000)			<--	Time in milliseconds each player should remain protected (invisible or with the battle suit) when they spawn.
g_spawnProtection_otherPlayers (default=0)		<--	Boolean to protect the winning team's players after a point is won in freezetag or team lastmanstanding or the single player in ffa lastmanstanding.  g_spawnProtection must be turned on for this variable to take effect.
g_spawnProtection_timeout (default=0)			<--	Boolean to protect players after a timeout ends.
g_spawnProtection_noPowerupSound (default=0)		<--	Boolean to eliminate the powerup sound you hear when you spawn and get the battlesuit or invisibility powerup (the g_spawnProtection_type).
g_gameMod (default=0)					<--	Selects the game modification.  This modifies the type of gameplay determined in g_gameType.
								0 = no game mod (default play)
								1 = freezetag (modifies team play, g_gameType == 3.)
								2 = lastmanstanding (free for all and team play, g_gameType == 0 and g_gameType == 3)
								3 = muckleball (free for all, g_gameType == 0)
g_gameMod_scoringSound (default="sound/teamplay/flagret_red.wav")
							<--	The sound that is played when a point is scored and when g_gameMod is set to freezetag, lastmanstanding, or muckleball.  Another common sound is sound/teamplay/flagcap_red.wav.
g_spawnInvulnerable (default=0)				<--	Boolean to enable invulnerable spawning.  Will cause all spawning players to spawn invulnerable.  This only takes affect on the initial spawn, not if you are teleported during a lastmanstanding or freezetag score or muckleball match restart.  See g_spawnInvulnerable_otherPlayers for more information.  Set to 0 to turn off protected spawning.  Turning this option on is not necessary if you only want people to be invulnerable after a timeout; in this case, set this variable to 0 and turn g_spawnInvulnerable_timeout on.
g_spawnInvulnerable_time (default=2000)			<--	Amount of time in milliseconds each player will be invulnerable when they spawn.  During this time, they will also be unable to inflict damage on other players.  This will only protect players on their initial spawn, not when they respawn after a frezetag or lastmanstanding or muckleball score.  If you want protected spawning in those situations, then see g_spawnInvulnerable_otherPlayers
g_spawnInvulnerable_otherPlayers (default=0)		<--	Boolean to make the winning player(s) invulnerable after a score in LMS, TeamLMS or Freezetag.  In MuckleBall, this is will make all players invulnerable after the point intermission is over.
g_spawnInvulnerable_timeout (default=0)			<--	Boolean to make the players invulnerable after a timeout ends.  See g_timeout for more information.
g_freezetag_unfreezeTime (default=3000)			<--	Amount of time in milliseconds a player has to stand next to a corpsicle to melt it in freezetag.
g_freezetag_frozenTeamColors (default=0)		<--	Boolean to turn on team colors for frozen bodies in freezetag.
g_freezetag_autoMeltTime (default=150)			<--	Time in seconds when a frozen player will melt on their own in freezetag.
g_freezetag_friendyAutoMeltTime (default=5000)		<-	Time in milliseconds a frozen player will melt when shot by their own teammate.  G_friendlyfire must be equal to 2 or 3 for this setting to take effect.
g_freezetag_worldAutoMeltTime (default=5000)		<--	Time in milliseconds a frozen player will melt when the body is shot into the void, lava, or slime.
g_freezetag_teleporterMelt (default=1)			<--	Boolean to make frozen bodies in freezetag melt when they hit a teleporter.  By default, they will melt.
g_freezetag_oldMeltingSound (default=0)			<--	Boolean to turn on the old melting sound that came with the original Freezetag.  Setting this to 0 will make a melting body sound like the regen powerup, and setting this to 1 will make a melting body sound like a noise from TankJr.
g_wpflags (default=3)					<--	Determines what weapons are available in the game and which ones you start with.  These values are cumulative (for instance, to enable machine guns (2) and gauntlet (1), you set this value to 3)::
								1 = Gauntlet (default)
								2 = Machine Gun (default)
								4 = Shotgun
								8 = Grenade Launcher
								16 = Rocket Launcher
								32 = Lightning Gun
								64 = Railgun
								128 = Plasma Gun
								256 = BFG
								512 = Grappling Hook (see also g_offhandGrapple)
g_startWeapon (default=0)				<--	Determines which weapon is in the ready position when a player spawns.  These values are, obviously, not cumulative.  Setting this value to 0 will force the most powerful weapon to be in the ready postion at spawn time, which is the default.
								1 = Gauntlet
								2 = Machine Gun
								4 = Shotgun
								8 = Grenade Launcher
								16 = Rocket Launcher
								32 = Lightning Gun
								64 = Railgun
								128 = Plasma Gun
								256 = BFG
								512 = Grappling Hook
g_doReady (default=0)					<--	Boolean to force everyone to click "Ready" during the intermission to start the next map.  Only available in freezetag or lastmanstanding.
g_startArmor (default=0)				<--	The amount of armor each person starts with when they spawn.
g_startPowerup (default=0)				<--	The type of powerup you get when you spawn.  These values are cumulative (for instance, if you wanted the player to spawn with regeneration and quad, set this value to 17).
								1 = Regeneration
								2 = BattleSuit
								4 = Haste
								8 = Invisibility
								16 = Quad Damage
								32 = Flight
g_startPowerup_time (default=5000)			<--	The time in milliseconds a player will have a powerup when they spawn.
g_startPowerup_otherPlayers (default=0)			<--	Boolean to make all players get a powerup after a point is won in freezetag and lastmanstanding or muckleball.  g_startPowerup must be turned on for this variable to take effect.  Normally, only the people respawning will get the powerup.
g_startHoldable (default=0)				<--	The type of holdable powerup you get when you spawn.  These values are _not_ cumulative.
								1 = Personal Teleporter
								2 = MedKit
g_startHoldable_otherPlayers (default=0)		<--	Boolean to make all players get a holdable powerup after a point is won in freezetag and lastmanstanding or muckleball.  g_startHoldable must be turned on for this variable to take effect.  Normally, only the people respawning will get the powerup.
g_voteLimit (default=0)					<--	Boolean to enable more options in voting.
g_calcStats (default=0)					<--	Boolean to calculate in-game player stats.  The player stats will print out in the console after the game.  Can also be accessed by any player by typing \playerstats in the console.
g_lastmanstanding_voidRespawnTime (default=7000)	<--	The amount of time each person is protected from falling into the void when they respawn in lastmanstanding.
g_warnings (default=0)					<--	Boolean to enable player warnings for server-sided auto-kicking.  when players team-kill, chatfrag, switch teams too often, or excessively suicide, they will get warned.  When they are warned g_warnings_* times, they are kicked.  Set it to 0 to disable all warnings and server-sided auto-kicking.
g_warnings_chatFrag (default=5)				<--	Number of warnings a player is allowed to have for chatfragging before they get kicked.
g_warnings_teamKill (default=5)				<--	Number of warnings a player is allowed to have for team killing before they get kicked.
g_warnings_changeTeam (default=3)			<--	Number of warnings a player is allowed to have for team switching before they get kicked.
g_warnings_massSuicide (default=5)			<--	Number of warnings a player is allowed to have for suiciding before they get kicked.
g_warnings_chatFragTime (default=90)			<--	The time in seconds a player has to do two chat frags to earn a warning.
g_warnings_teamKillFime (default=120)			<--	The time in seconds a player has to kill two teammates to earn a warning.
g_warnings_changeTeamTime (default=115)			<--	The time in seconds a player has to change teams twice to earn a warning.
g_warnings_massSuicideTime (default=120)		<--	The time in seconds a player has to suicide twice to earn a warning.
g_timeout (default=0)					<--	Number of timeouts each team is allowed to call.  Set to 0 to disable timeouts.  Must be in a team game to be able to call a timeout.  To call a timeout, type \timeout in the player's console.
g_timeout_time (default=15)				<--	Length of each timeout in seconds.
g_timeout_minPlayingTime (default=120)			<--	The minimum amount of time, in seconds, that a player must be playing in order to call a timeout.
g_timeout_displayTime (default=1)			<--	Time, in milliseconds, a player will see the message stating that a timeout has been called.
g_decoy (default=0)					<--	Number of decoys each player has.  Set this to 0 to disable decoys.  To deploy a decoy, type \decoy in the player's console.
g_decoy_think (default=12)				<--	Number of times the decoy will move.  The time between each move is between 1 and 3 seconds.  A large g_decoy_think will make decoys stay around longer, whereas a small g_decoy_think value will make decoys disappear quickly.
g_offhandGrapple (default=0)				<--	Boolean to enable offhand grappling.  Bind a button to +button5 to use it.
g_railgunEffects (default=0)				<--	Turns on the railgun's special abilities:
								0 = normal railgun firing
								1 = make the railgun go through everything, including map walls
								2 = make the railgun bounce off map structures
g_railgunEffects_reflections (default=4)		<--	If g_railgunEffects is set to 2, this is the number of railgun beam reflections that will occur before the railgun beam terminates.
g_railgunEffects_bankshotOnly (default=0)		<--	Boolean to make reflected railgun shots only deliver damage, rather than direct-hit railgun shots.
g_railgunSplash (default=0)				<--	Boolean to enable splash damage and knockback on the railgun.  This also enables railgun-jumping.  Can be further tweaked with g_splashDamage_railgun and g_splashRadius_railgun and will also work with all railgun reflections if g_railguneffects == 2.  If using this for railgun-jumping, see g_selfDamage, g_splashDamage_railgun, g_knockback_self, and g_splashRadius_railgun.
g_railgunSplash_noTargetDamage (default=0)		<--	Boolean to turn off splash damage on opponents and make it so that a railgun splash won't hurt an opponent.  Useful when you want to railgun jump, but you don't want the splash to affect other players.
g_railgunSplash_noTargetKnockback (default=0)		<--	Boolean to turn off knockback on opponents and make it so that a railgun splash won't knockback opponents.  Useful when you want to railgun jump, but you don't want the splash to affect other players.
g_weaponSwitchTime (default=200)			<--	Time in milliseconds it takes to switch weapons.  Anything above 50 milliseconds is a valid value.
g_antiCamper (default=0)				<--	Time in seconds a person can camp in the same location.  Set it to 0 to disable anticamper measures.
g_antiCamper_radius (default=192)			<--	Radius of the circle the player must move beyond to be considered not camping.
g_antiCamper_warnDisplayTime (default=1)		<--	Time, in milliseconds, a player will see the warning message stating that they are about to die due to camping
g_noPowerupDrop (default=0)				<--	Boolean to disable all powerup dropping when a player dies.
g_noPowerupDrop_teamPlay (default=1)			<--	Boolean to disable all powerup dropping when a player dies in teamplay.  By default, no weapons are dropped in teamplay, but by setting this variable to 0, powerups will be dropped.  If set to 0, be sure g_noPowerupDrop is also set to 0.
g_noWeaponDrop (default=0)				<--	Boolean to disable all weapon dropping when a player dies.
g_selfDamage (default=0.5)				<--	Multiplier for damage inflicted upon yourself.  Make it 0 to prevent all self-damage.
g_blackNameFix (default=0)				<--	Variable to disable/enable the black name fix, which will disable people from exploiting the bug which allows black letters in player names.
								0 = Stock version of quake that allows people to use black names due to a bug
								1 = Prevent the use of black names unconditionally
								2 = Totally allow players to use black names by using ^0
g_turret (default=0)					<--	Boolean to turn on turrets in gameplay.  To give turrets to each person, adjust g_turret_amount.
g_turret_amount (default=2)				<--	Number of turrets each person starts with.  To deploy a turret, type \turret in the player's console.
g_turret_friendlyFire (default=0)			<--	Boolean to allow turrets to target and shoot at teammates in team games.  G_friendlyFire must also be on for this to take effect.
g_turret_lifetime (default=45)				<--	The lifetime, in seconds, of each turret.  when the lifetime is up, the turret explodes.
g_turret_targetDist (default=512)			<--	The distance in front of the turret the turret will look for possible targets.
g_turret_targetArc (default=45)				<--	The number of degrees the turret can turn to shoot at someone.  This value is measured in degrees in one direction, so setting it to 90, for instance, will allow the turret to turn left 90 degrees and turn right 90 degrees, so it has a total of 180 degrees of movement (this applies to up and down movement also).
g_turret_splashRadius (default=100)			<--	The splash radius of the turret when it explodes.
g_turret_splashDamage (default=100)			<--	The amount of splash damage the turret will do when it explodes.
g_turret_projSplashRadius (default=100)			<--	The splash radius of the turret's projectile when it explodes.
g_turret_projSplashDamage (default=100)			<--	The amount of splash damage the turret's projectile will do when it explodes.
g_turret_damage	(default=15)				<--	The amount of damage the turret will do when it hits you with a projectile.
g_turret_health (default=25)				<--	The health of the turret.  To kill a turret, shoot anywhere below it.
g_turret_reloadTime (default=300)			<--	The time it takes for the turret to reload before shooting again.
g_turret_weapon (default=1)				<--	The type of projectile that the turret shoots:
								1 = Plasma
								2 = Grenades
								3 = Rockets
								4 = BFGs
g_turret_setupTime (default=5000)			<--	The inactivity time, in milliseconds, between when the turret is deployed and when it starts targeting enemies.
g_turret_deployLimit (default=0)			<--	The number of turrets that you can have deployed at any one time
g_turret_teamProtected (default=0)			<--	Boolean to make the turret invulnerable to damage inflicted by teammates, except the owner of the turret.
g_turret_teamMarker (default=0)				<--	Boolean to draw blue or red rings around the turrets in team games to distinguish which team they belong to.
g_autoBan (default=0)					<--	Boolean to turn on autobanning for excessive chat fragging, team killing, team changing, or mass suiciding.
g_autoBan_chatFrag (default=3)				<--	The number of games a person will be banned if they are kicked due to excessive chatfragging.  Set this to -1 to make the ban a permanent ban.
g_autoBan_teamKill (default=3)				<--	The number of games a person will be banned if they are kicked due to excessive team killing.  Set this to -1 to make the ban a permanent ban.
g_autoBan_changeTeam (default=3)			<--	The number of games a person will be banned if they are kicked due to excessive team changing.  Set this to -1 to make the ban a permanent ban.
g_autoBan_massSuicide (default=3)			<--	The number of games a person will be banned if they are kicked due to excessive suiciding.  Set this to -1 to make the ban a permanent ban.
g_teamName_red (default="Red")				<--	The name of the red team in freezetag and lastmanstanding.
g_teamName_blue (default="Blue")			<--	The name of the blue team in freezetag and lastmanstanding.
g_knockback_self (default=1000)				<--	Value to control the amount of knockback you can give yourself.  Useful for tweaking rocket jumping and railgun jumping.  If using this for railgun-jumping, see g_selfDamage, g_splashDamage_railgun, g_splashRadius_railgun, and g_railgunSplash (and sub commands).
g_maxHealthMultiplier (default=1.00)			<--	The amount to multiply 100 by to get the max health value for players.  For instance, setting this to 2.00 will allow all your players to get 200 health.  Players with handicaps will have lower max health values, as normal.  While players can get above this value, this value represents the point at which health will no longer count down.
g_startHealthAddition (default=25)			<--	The amount of extra health you get at spawn time.  Your health at spawn time = 100 * g_maxHealthMultiplier + g_startHealthAddition 
dmflags (default=0)					<--	Determines which game options are in effect.  These values are cumulative (for instance, to disable falling damage (8) and footsteps (32), you set this value to 40):
								8 = No falling damage		-->	Disables players from receiving damage due to falling.
								16 = Fixed field of view	-->	Disables players from adjusting the cg_fov variable on their client.
								32 = No footsteps		-->	Turns off the footstep noise.
								64 = No item reset		-->	Only active when in freezetag or lastmanstanding (see g_gameMod).  It causes all living players at the end of the point to not have their weapons and armor reset.  This puts them at a disadvantage.
								128 = No team reset		-->	Only active when in freezetag or lastmanstanding (see g_gameMod).  It causes the team that won the last point to not reset, which means that people who were dead/frozen at the end of the last point will stay dead/frozen until they are melted or until their team loses a point.
								256 = Weapons stay		-->	Only active when in freezetag (see g_gameMod).  It causes dropped weapons to stay and not be freed.
								512 = No playerclip		-->	Allows players to walk along ledges and go on the roofs of maps without being stopped by some invisible wall.  An unfortunate side effect is that you may fall through some see-through floors.
								1024 = Nightmare mode		-->	Only active when in freezetag or lastmanstanding (see g_gameMod).  In both g_gameMods, you'll do 8 times the normal amount of damage and you'll start with tons of weapons and ammo.  In freezetag, you'll automelt faster and melt other people faster.
								2048 = No world damage		-->	Disabled players from receiving damage from lava, slime, and water.    Note: if you turn this on and are playing in freezetag, a frozen body shot into the lava will no longer automelt.
g_camera (default=0)					<--	Enables the spectator to watch their opponents in a third person view, which swivels around while it watches people.  This code is untested, so any feedback would be great.
g_muckleball_ballType (default=1)			<--	The type of powerup you get when carrying the MuckleBall (when in g_gameMod == 3).  These values are cumulative (for instance, if you wanted the player with the MuckleBall to have regeneration and quad, set this value to 17).
								1 = Regeneration
								2 = BattleSuit
								4 = Haste
								8 = Invisibility
								16 = Quad Damage
								32 = Flight
g_muckleball_intermissionTime (default=5)		<--	The number of seconds of intermission time between Muckleball rounds.
g_muckleball_lastHurtTime (default=5000)		<--	The duration, in milliseconds, between when a person hits and when you suicide or fall into the void, where the attacker will get credit for a MuckleBall kill.  Set this to 0 to force the MuckleBall to be given to a random person if the holder falls into the void.
g_muckleball_scoringMultiplier (default=0.5)		<--	When the MuckleBall holder is killed, the killer will get points equal to the number of players in the arena times g_muckleball_scoringMultiplier.
g_muckleball_regenMultiplier (default=2)		<--	When the MuckleBall holder has the regen powerup, they will get health every second equal to the number of people in the game times g_muckleball_regenMultiplier.
g_regen_addHealth (default=15)				<--	The amount of health you get every second when you have the regeneration powerup
g_lifetime_rocket (default=10000)			<--	The lifetime, in milliseconds, of a rocket.  When this time expires, the rocket will explode.  Note: Setting this to 0 will make rockets last forever.
g_lifetime_bfg (default=10000)				<--	The lifetime, in milliseconds, of a bfg projectile.  When this time expires, the projectile will explode.  Note: Setting this to 0 will make the projectile last forever.
g_lifetime_grenade (default=2500)			<--	The lifetime, in milliseconds, of a grenade.  When this time expires, the grenade will explode.  Note: Setting this to 0 will make grenade last forever.
g_lifetime_plasma (default=10000)			<--	The lifetime, in milliseconds, of a plasma projectile.  When this time expires, the projectile will explode.  Note: Setting this to 0 will make the projectile last forever.
g_lifetime_grapple (default=5000)			<--	The lifetime, in milliseconds, of a firing grapple hook.  When this time expires, the firing grapple hook will explode.  Note: Setting this to 0 will make the firing grapple hook last forever.
g_lifetime_prox (default=3000)				<--	The lifetime, in milliseconds, of a proximity grenade.  When this time expires, the proximity grenade will expode.  Note: Setting this to 0 will make the proximity grenade last forever.
g_noPublicChat (default=0)				<--	Boolean to disable all public chatting.  Useful for controlling public chats during clan matches.
g_noDamageAfterDeath (default=0)			<--	Boolean to disable all damage from dead players.  If a player fires a projectile, then dies, all the player's projectiles will not deliver damage, even if said player respawns.
g_noSpawningSound (default=0)				<--	Boolean to disable all sounds and visual effects when you spawn.  Turning this variable on will disable the teleport sound during spawning as well as the teleport visual effect on spawning.  If you are spawning protected (g_spawnProtection) and you want to disable the powerup sound effect, then see g_spawnProtection_noPowerupSound.
g_longNameFix (default=0)				<--	Boolean to fix player names being truncated when the onscreen messages are longer than 34 characters.  Instead of players seeing, "LongNamedPlayer has joined the re", the message will be spread over two lines.
g_adminLog (default=admin.log)				<--	Name of the admin logfile that is created by quake.  It contains the player names and ip addresses of all players who have connected to the server.  If you have g_referee turned on, then this log will also contain all referee game interaction (for possible abuse auditing).
g_adminLogSync (default=0)				<--	Syncronizes file writes to the logfile.  Setting this to 1 causes the Quake engine to write data to the log file as soon as data is created, which causes performance degradation.  Leaving it at 0 causes the engine to write data to a buffer.  When that buffer fills, the buffer is written out to disk.
g_referee (default=0)					<--	Boolean to enable referees.  Referees can act as pseudo-admins to control the game, kick players, etc.  See the net and improved server command list (below) for more information.
g_referee_password (default="")				<--	Password that all referees must use to turn on their referee abilities
g_referee_warnDisplayTime (default=1)			<--	Time, in milliseconds, a player will see the warning message stating that they have received a warning
g_referee_allowedcmd_*					<--	Set of allowed commands that referees are allowed to use.  For instance, if you want referees to be allowed to kick another player, do a 'set g_referee_allowedcmd_kick 1' at the console.  If you want referees to be allowed to mute someone, then do a 'set g_referee_allowedcmd_mute 1' at the console.  Create as many g_referee_allowedcmd_* variables you need for your referees to control the game appropriately.  See the ref command tutorial below in the server commands.
g_antiBot (default=0)					<--	Boolean to enable client command checking for suspicious commands that may indicate bot usage or cheating.
g_antiBot_gamesBanned (default=10)			<--	Number of games a suspected bot user or cheater is banned from the server.  Leaving this at 0 will not ban a cheater, they will instead only be kicked.
g_dodge (default=0)					<--	Boolean to enable players to use dodging.  To dodge, double-tap a direction to move in, and your player will then quickly jump in that direction.
g_dodge_restTime (default=1500)				<--	The time, in milliseconds, after doing a dodge that you must wait before performing another dodge.
g_doublejump (default=0)				<--	Boolean to enable player double jumping.  By hitting the jump button twice in rapid succession, the player will then jump twice, which can lead to higher jumps and much higher weapon-assisted jumps.
g_doublejump_timeout (default=250)			<--	The time after your first jump, in milliseconds, that you have to hit the jump key a second time in order to create a double jump.
g_password_errorMessage (default="Invalid password")	<--	Message displayed to connecting players when they do not have the correct password.  Used when g_needpass and g_password are both valid.
g_respawn_armor	(default=25)				<--	The time in seconds it will take for armor to spawn again after being picked up.
g_respawn_health (default=35)				<--	The time in seconds it will take for health to spawn again after being picked up.			
g_respawn_ammo (default=40)				<--	The time in seconds it will take for ammo to spawn again after being picked up.
g_respawn_holdable (default=60)				<--	The time in seconds it will take for a holdable item to spawn again after being picked up.
g_respawn_megahealth (default=35)			<--	The time in seconds it will take for megahealth to spawn again after being picked up.
g_respawn_powerup (default=120)				<--	The time in seconds it will take for a powerup, like quad, to spawn again after being picked up.
g_noPowerupSpawnSound (default=0)			<--	Boolean to disable the global powerup sound you hear when (for instance) quad spawns.
g_noPowerupPickupSound (default=0)			<--	Boolean to disable the global powerup sound you hear when (for instance) quake is picked up.
g_itemDisable (default=0)				<--	Determines what map items, like weapons and ammo are disabled from spawning on your map.  g_noMapItems will cause this variable to be ignored.  Find what items you want disabled, add their values up, and set g_itemDisable to it.  For instance, to disable quad and the grenade launcher, add 67108864 + 512 and then set g_itemDisable to the sum.
								-1 = disable all map items
								1 = armor shard
								2 = combat armor
								4 = body armor
								8 = small health
								16 = medium health
								32 = large health
								64 = mega health
								128 = gauntlet
								256 = shotgun
								512 = grenadelauncher
								1024 = rocketlauncher
								2048 = lightninggun
								4096 = railgun
								8192 = plasmagun
								16384 = bfg
								32768 = grapplinghook
								65536 = shotgun ammo box
								131072 = machinegun ammo box
								262144 = grenade ammo box
								524288 = plasmagun ammo box
								1048576 = lightninggun ammo box
								2097152 = rocket ammo box
								4194304 = railgun ammo box
								8388608 = bfg ammo box
								16777216 = personal teleporter
								33554432  = medkit
								67108864 = quad damage
								134217728 = environmental suit/battle suit
								268435456 = haste
								536870912 = invisibility
								1073741824 = regeneration
								2147483648 = flight
g_quadRestrictions (default=0)				<--	Determines various restrictions that apply to someone holding the quad damage.  These restrictions apply to the player holding the quad for as long as they hold it.  These values are also cumulative.
								1 = the player cannot pick up armor
								2 = the player cannot pick up health
								4 = the player cannot pick up quad
g_powerupTime_quad (default=30)				<--	The amount of time, in seconds, that quad will last.
g_powerupTime_battlesuit (default=30)			<--	The amount of time, in seconds, that the battlesuit will last.
g_powerupTime_haste (default=30)			<--	The amount of time, in seconds, that haste will last.
g_powerupTime_invis (default=30)			<--	The amount of time, in seconds, that invisibility will last.
g_powerupTime_regen (default=30)			<--	The amount of time, in seconds, that regeneration will last.
g_powerupTime_flight (default=60)			<--	The amount of time, in seconds, that flight will last.
g_switchTeamTime (default=5)				<--	The amount of time, in seconds, that you must be playing before you can change teams. This variable also controls how often you can change teams.
g_intermissionAddBot (default=0)			<--	Boolean to allow bots to be added into the game during the intermission.
g_grapple_skyattach (default=0)				<--	Boolean to allow the grappling hook to attach/hook onto the sky.
g_projectileBounce (default=0)				<--	Variable to make certain projectiles bounce when they hit a map structure, rather than exploding.  These values are cumulative.
								1 = Plasma
								2 = Rockets
								4 = BFGs
g_ctf_flagPowerup (default=0)				<--	Boolean to give the flag holder in ctf quad damage.  If you only want the person to have the quad skin and not quad damage, then set g_quadfactor to 1.
g_ctf_baseMarker (default=0)				<--	Boolean to draw a blue or red ring at the center of the blue or red base, respectively.
g_oneflagctf_baseMarker (default=0)			<--	Boolean to draw a blue, red, or white ring at the center of the blue, red, or neutral cases, respectively.
g_frictionCoefficient (default=6)			<--	The amount of friction you experience moving around on the map.
g_frictionCoefficient_water (default=1)			<--	The amount of friction you experience moving around in water
g_frictionCoefficient_flight (default=3)		<--	The amount of friction you experience while using the flight powerup.
g_frictionCoefficient_spectator (default=5)		<--	The amount of friction you experience moving around as a spectator.
g_accelerationCoefficient (default=10)			<--	The amount of acceleration you experience while moving around on the map.
g_accelerationCoefficient_air (default=1)		<--	The amount of acceleration you experience while you are not on solid ground (like when you free falling).
g_accelerationCoefficient_water (default=4)		<--	The amount of acceleration you experience while moving around in water.
g_accelerationCoefficient_flight (default=8)		<--	The amount of acceleration you experience while using the flight powerup.
g_freezetag_spawnCampedRespawnTime (default=0)		<--	The amount of time, in milliseconds, that can elapse after you spawn wherein you can be killed and will automelt in 5 seconds, provided you are g_freezetag_spawnCampedDistance from your original spawn point.  Set this to be 0 to turn off this feature.
g_freezetag_spawnCampedDistance (default=100)		<--	The distance you can be from you (re)spawn point in order to qualify for automatic automelting as directed by g_freezetag_spawnCampedRespawnTime.
g_freezetag_spawnCampedNoPoints (default=0)		<--	Boolean to force a spawn camper to not gain any points if they freeze a person who recently spawned and the victim hasn't moved much.
g_lastmanstanding_spawnCampedRespawnTime (default=0)	<--	The amount of time, in milliseconds, that can elapse after you spawn wherein you can be killed and will respawn afterwards, provided you are g_lastmanstanding_spawnCampedDistance from your original spawn point.  Set this to be 0 to turn off this feature.
g_lastmanstanding_spawnCampedDistance (default=100)	<--	The distance you can be from you (re)spawn point in order to qualify for automatic respawning as directed by g_lastmanstanding_spawnCampedRespawnTime.
g_lastmanstanding_spawnCampedNoPoints (default=0)	<--	Boolean to force a spawn camper to not gain any points if they kill a person who recently spawned and the victim hasn't moved much.
g_weaponSwitchTime_noReload (default=0)			<--	Boolean to disable the wait time between when you shoot a weapon and when you can change to the next weapon.
g_turret_freePlacement (default=0)			<--	Boolean enabling a player to place a turret anywhere without it dropping to the floor.
g_turret_overlapEntities (default=0)			<--	Boolean to allow players to place a turret where another items or player may spawn.  This also allows the turret to move with moving platforms.
g_votePassingValue (default=0.5)			<--	The precentage of players, plus one, that must vote yes to a vote in order for that vote to be passed.  For instance, if you have 16 people in your server and this value is set to 0.75, then 13 people must vote yes for a vote to pass.  Valid values are between 0 and 1.
g_farthestRespawnPoint (default=1)			<--	Boolean to determine how the NoGhost mod will determine where to respawn a player after they die. Turning this variable off will spawn the player anywhere in the arena, rather than farthest away from they died. This could increase their chances of spawning right next to their former attacker.
g_tournamentMapRotation (default=0)			<--	Boolean to allow map roations to occur during tounaments. Setting the value of nextmap will determine the next map in the rotation.
g_freezetag_grappleFreeze (default=0)			<--	Boolean to allow the grappling hook to freeze people in freezetag.




new/improved server commands...

banning				<--	This functionality has been redone for more granularity and to work better with g_autoBan.  In the stock quake engine, you would add ip addresses to g_banIPs and they would be banned forever.  Now, when you ban someone, you can tell the quake engine how long you want the player banned for.  This new functionality has caused some backward compatibilities, so if you have a current list of IP addresses that you want banned forever, then make a note of them, clear the g_banips variable, then add them back in using the addip command.  Note: If you want a person banned forever, set their how_many_games_you_want_them_banned_for to be -1.
	command structure (note that [] means a required variable, and a {} means an optional variable):
		addip [player's_IP_address] [how_many_games_you_want_them_banned_for]
		removeip [player's_IP_address] {how_many_games_you_want_them_banned_for}
		kickban [player's_name_or_slot_number] [how_many_games_you_want_them_banned_for]

muting				<--	This function has been added to mute certain players.  When a player disconnects or the map restarts, that client slot is automatically unmuted.
	command structure (note that [] means a required variable, and a {} means an optional variable):
		mute [player's_name_or_slot_number]
		unmute [player's_name_or_slot_number]

telling as the console		<--	This function gives the admin the ability to talk to certain players, rather than to everyone in the arena, from the console.  Acts the same as the \tell command inside the game.
	command structure (note that [] means a required variable, and a {} means an optional variable):
		tell [player's_name_or_slot_number] [message]

pausing the game		<--	This function gives the admin the ability to pause the entire game.  All players will be unable to shoot, move, or be affected by gravity.
	command structure (note that [] means a required variable, and a {} means an optional variable):
		pause
		unpause

referees			<--	This function allows the admin to delegate control of certain commands to trusted players.  The setref command is used to turn on the referee abilities and the ref command is used to issue commands to the quake server.
	command structure (note that [] means a required variable, and a {} means an optional variable):
		setref [referee_password]
		ref [command] {command_arguments}
		ref playerlist						prints out a list of all players.
		ref hideref						hides the referee.  this command must be allowed by setting g_referee_allowedcmd_hideref to 1.
		ref unhideref						unhides the referee.  this command must be allowed by setting g_referee_allowedcmd_unhideref to 1.
		ref warn [player's_name_or_slot_number] [message]	warns a player.  this command must be allowed by setting g_referee_allowedcmd_unhideref to 1.
	other ref commands, like mute, kick, or kickban for instance, need to be authorized by the server admin for use by refs.  To do this, set the appropriate variable.  For instance, to allow a ref to mute someone, set g_referee_allowedcmd_mute to 1.  Continue setting these variables until you have given your refs the appropriate commands to admin the server correctly.  All console commands and rcon commands are valid ref commands, just set the appropriate variable.

forceteam			<--	This function forces a player onto a team.  Abbreviations for the team variable in the command can be used, for instance to force player 2 onto the red team, use: forceteam 2 r.  You can use the letter b for the blue team and s for spectator team.
	command structure (note that [] means a required variable, and a {} means an optional variable):
		forceteam [player's_name_or_slot number] [team]


serverstatus			<--	This function dislays information about the people playing on the server, similar to using the 'status' command from the console.  This is a console or rcon command only.
	command structure (note that [] means a required variable, and a {} means an optional variable):
		serverstatus

replacing map items		<--	This function allows you to replace certain items on the map, like weapons or health.
	command structure (note that [] means a required variable, and a {} means an optional variable):
		set replace_<item_type>_<item_name> <item_type>_<item_name>
	See the items.txt file that is in the configs directory of the NoGhost ip file.  It contains all the appropriate item names and item types required.  For instance, to replace the railgun with the rocket launcher in your arena, you'd type set replace_weapon_railgun weapon_rocketlauncher in your console..  Also for example, to replace the mega health with the quad damage, you'd type set replace_item_health_mega item_quad in your console.  Continue setting these variables until you have replaced all the items that you desire.

team locking			<--	This function allows you to lock a team so that other people cannot join it
	command structure (note that [] means a required variable, and a {} means an optional variable):
		lockteam						prints out a list of which teams are locked and unlocked
		lockteam <team>						locks a team.  <team> can be red or blue, or can be r or b.
		unlockteam <team>					unlocks a team.  <team> can be red or blue, or can r or b.

